{"version":3,"sources":["reportWebVitals.ts","store/appReducer.tsx","store/AppContext.tsx","components/Header/Header.tsx","store/themeContext.tsx","components/Navigation/Navigation.tsx","components/Chart/Chart.tsx","config/index.tsx","hooks/useFetch.tsx","helpers/index.ts","hooks/useLocalStorage.tsx","components/Chart/LineChart.tsx","components/Select/Schools.tsx","components/Select/Camps.tsx","components/Select/Countries.tsx","components/SchoolDetails/SchoolDetails.tsx","components/Loading/Loading.tsx","pages/Home/Home.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","selectedCountry","updateCountry","selectedCamp","updateCamp","camp","basedOnCountry","selectedSchool","updateSchool","school","basedOnCamp","themeMode","updateTheme","theme","loading","updateLoading","status","appReducer","state","action","type","payload","Object","objectSpread","country","Error","concat","AppContext","createContext","AppProvider","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","Header","setThemeMode","mode","_useContext","useContext","Box","sx","flexGrow","AppBar","className","position","backgroundColor","marginBottom","Toolbar","Typography","variant","component","data-testid","FormGroup","FormControlLabel","control","Switch","defaultChecked","onChange","event","target","checked","aria-label","label","Navigation","Grid","container","spacing","item","xs","Countries","Camps","Schools","Chart","Chart_LineChart","Config","dataURL","filterData","data","filter","index","findIndex","second","useFetch","_useState","useState","_useState2","setData","_useState3","_useState4","error","setError","getAPIData","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","resData","wrap","_context","prev","next","fetch","sent","json","allData","countries","camps","schools","t0","abrupt","stop","apply","this","arguments","useEffect","groupSchoolsByMonth","months","updatedData","forEach","entry","accentColorList","Array","fill","Math","floor","random","toString","schoolMonthsData","from","indexOf","month","lessons","push","borderWidth","borderColor","tension","spanGaps","pointHitRadius","pointRadius","filterChartData","filterSchools","key","Map","map","values","toConsumableArray","removeDuplicates","record","condition","useLocalStorage","currentStorage","localStorage","getItem","JSON","parse","storage","updateStorage","undefined","window","setTimeout","setItem","stringify","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","LineChart","_useLocalStorage","navigate","useNavigate","_useFetch","labels","datasets","chartData","setChartData","getData","keys","length","useMemo","hasOwnProperty","renderChart","react_chartjs_2_dist","options","onClick","element","datasetIndex","plugins","title","display","text","legend","usePointStyle","SchoolsList","_useLocalStorage2","Fragment","FormControl","fullWidth","InputLabel","id","Select","labelId","MenuItem","CampsList","CountriesList","SchoolDetails","currentSchoolDetails","setCurrentSchoolDetails","console","log","getSchoolDetails","Link","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","toLowerCase","replace","align","TableBody","&:last-child td, &:last-child th","border","Loading","react","width","margin","LinearProgress","Home","createTheme","palette","currentTheme","setCurrentTheme","ThemeProvider","CssBaseline","components_Loading_Loading","components_Header_Header","components_Navigation_Navigation","dist","react_router_dist","path","components_Chart_Chart","components_SchoolDetails_SchoolDetails","ReactDOM","createRoot","document","getElementById","render","StrictMode","store_AppContext","pages_Home_Home"],"mappings":"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","file":"static/js/main.972fba74.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n\tselectedCountry: \"Egypt\",\n\tupdateCountry: (updateCountry: string) => {},\n\tselectedCamp: \"\",\n\tupdateCamp: (camp: string, basedOnCountry: boolean) => {},\n\tselectedSchool: \"\",\n\tupdateSchool: (school: string, basedOnCamp: boolean) => {},\n\tthemeMode: \"light\",\n\tupdateTheme: (theme: string) => {},\n\tloading: false,\n\tupdateLoading: (status: boolean) => {}\n};\n\nexport type ChartType = typeof initialState;\n\nconst appReducer = (state: ChartType, action: any): any => {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase \"UPDATE_COUNTRY\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedCountry: payload.country,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_CAMP\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedCamp: payload.camp,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_SCHOOL\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedSchool: payload.school,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_THEME\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tthemeMode: payload.themeMode,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_LOADING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: payload.loading,\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`${type} is not a valid reducer type`);\n\t}\n};\n\nexport default appReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport { default as appReducer, initialState, ChartType } from \"./appReducer\";\nexport const AppContext = createContext(initialState);\nconst AppProvider = ({ children }: any) => {\n\tconst [state, dispatch] = useReducer(appReducer, initialState);\n\tconst updateCountry = (country: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_COUNTRY\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tcountry: country,\n\t\t\t},\n\t\t});\n\t};\n\tconst updateCamp = (camp: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_CAMP\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tcamp: camp,\n\t\t\t},\n\t\t});\n\t};\n\tconst updateSchool = (school: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_SCHOOL\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tschool: school,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst updateTheme = (themeMode: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_THEME\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tthemeMode: themeMode,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst updateLoading = (status: boolean): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_LOADING\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tloading: status,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={\n\t\t\t\t{\n\t\t\t\t\tselectedCountry: state.selectedCountry,\n\t\t\t\t\tselectedSchool: state.selectedSchool,\n\t\t\t\t\tselectedCamp: state.selectedCamp,\n\t\t\t\t\tupdateSchool: updateSchool,\n\t\t\t\t\tupdateCamp: updateCamp,\n\t\t\t\t\tupdateCountry: updateCountry,\n\t\t\t\t\tthemeMode: state.themeMode,\n\t\t\t\t\tupdateTheme: updateTheme,\n\t\t\t\t\tloading: state.loading,\n\t\t\t\t\tupdateLoading: updateLoading,\n\t\t\t\t} as any\n\t\t\t}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\nexport default AppProvider;\n","import React, { useContext } from \"react\";\nimport {\n\tAppBar,\n\tBox,\n\tToolbar,\n\tTypography,\n\tFormControlLabel,\n\tFormGroup,\n\tSwitch,\n} from \"@mui/material\";\nimport { AppContext } from \"../../store\";\n\nconst Header: React.FC = () => {\n\t// store and update theme mode\n\tconst { themeMode, updateTheme } = useContext(AppContext);\n\tconst handleChange = (event: any) => {\n\t\tupdateTheme(event.target.checked ? \"light\" : \"dark\");\n\t};\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar\n\t\t\t\tclassName=\"app-bar\"\n\t\t\t\tposition=\"static\"\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundColor: \"#3e3e3e\",\n\t\t\t\t\tmarginBottom: \"1em\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tdata-testid=\"app-bar-title\"\n\t\t\t\t\t\tsx={{ flexGrow: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tNumber Of Lessons\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\taria-label=\"login switch\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={themeMode == \"dark\" ? \"Dark\" : \"Light\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n};\n\nexport default Header;\n","import React, { createContext } from \"react\";\nimport { PaletteOptions } from \"@mui/material\";\n\n/* Theme Context Interface */\ninterface IThemeContext {\n\tthemeMode: PaletteOptions;\n\tsetThemeMode: (mode: string) => void;\n}\n\nconst themeModeContext = createContext<IThemeContext>({\n\tthemeMode: \"dark\" as PaletteOptions,\n\tsetThemeMode: (mode) => {},\n});\nexport default themeModeContext;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { SchoolsList, CampsList, CountriesList } from \"./../\";\n\nconst Navigation: React.FC = () => {\n\treturn (\n\t\t<Grid\n\t\t\tclassName=\"section-container\"\n\t\t\tsx={{ flexGrow: 1 }}\n\t\t\tcontainer\n\t\t\tspacing={4}\n\t\t>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<CountriesList />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<CampsList />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<SchoolsList />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { LineChart } from \"./../\";\n\nconst Chart: React.FC = () => {\n\treturn (\n\t\t<Grid className=\"section-container\" container spacing={2}>\n\t\t\t<Grid item xs={11}>\n\t\t\t\t<LineChart />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Chart;\n","const Config = {\n\tdataURL:\n\t\t\"https://raw.githubusercontent.com/abdelrhman-arnos/analysis-fe-challenge/master/data.json\",\n};\nexport default Config;\n","import { useEffect, useState } from \"react\";\nimport Config from \"./../config\";\n\n/* Filter data fetched from the api */\nconst filterData = (data: [], type: string) => {\n\treturn data.filter((item: any, index: number) => {\n\t\treturn (\n\t\t\tindex === data.findIndex((second) => item[type] === second[type])\n\t\t);\n\t});\n};\n/* Fetch charts data */\nconst useFetch = () => {\n\t// Store data and updated countries, schools and camps list\n\tconst [data, setData] = useState<any>({});\n\n\t// Store error message\n\tconst [error, setError] = useState<any>();\n\n\t// Fetch data\n\tconst getAPIData = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(Config.dataURL);\n\t\t\tconst resData = await response.json();\n\n\t\t\t// Update schools, camps and countries\n\t\t\tsetData({\n\t\t\t\t...data,\n\t\t\t\tallData: resData,\n\t\t\t\tcountries: filterData(resData, \"country\"),\n\t\t\t\tcamps: filterData(resData, \"camp\"),\n\t\t\t\tschools: filterData(resData, \"school\"),\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn setError(err);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetAPIData();\n\t}, []);\n\treturn { data, error };\n};\nexport default useFetch;\n","export const generateColor = () => {\n\treturn `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\n// Remove duplicated based on object key\nexport const removeDuplicates = (data: any, key: string) => {\n\tconst updatedData = new Map(\n\t\tdata.map((item: any) => [item[key], item])\n\t).values();\n\treturn [...(updatedData as any)];\n};\n\n// Group schools by month\nexport const groupSchoolsByMonth = (schools: any): [] => {\n\tconst months = [\n\t\t\"Jan\",\n\t\t\"Feb\",\n\t\t\"March\",\n\t\t\"Apr\",\n\t\t\"May\",\n\t\t\"Jun\",\n\t\t\"Jul\",\n\t\t\"Aug\",\n\t\t\"Sep\",\n\t\t\"Oct\",\n\t\t\"Nov\",\n\t\t\"Dec\",\n\t];\n\tconst updatedData: any = [];\n\n\t// loop through data, and create an entry with school as a label\n\tschools.forEach((entry: any) => {\n\t\t// Accent color\n\t\tlet accentColorList = Array(2).fill(generateColor());\n\n\t\t// Filter school data per months\n\t\tconst schoolMonthsData = Array.from(Array(12).fill(0));\n\t\tlet monthIndex = months.indexOf(entry.month);\n\t\tschoolMonthsData[monthIndex] = entry.lessons;\n\t\tupdatedData.push({\n\t\t\tlabel: entry.school,\n\t\t\tdata: schoolMonthsData,\n\t\t\tbackgroundColor: accentColorList,\n\t\t\tborderWidth: \"2\",\n\t\t\tborderColor: accentColorList[0],\n\t\t\ttension: 0.2,\n\t\t\tspanGaps: true,\n\t\t\tpointHitRadius: \"2\",\n\t\t\tpointRadius: \"2\",\n\t\t});\n\t});\n\n\treturn updatedData;\n};\n// Filter data based on country\nexport const filterChartData = (\n\tdata: [],\n\tcountry: string,\n\tcamp: string,\n\tschool: string\n): object => {\n\tconst getAllSchools = data.filter((record: any) => {\n\t\tlet condition = true;\n\t\tif (country !== \"\") {\n\t\t\tcondition = record.country === country;\n\t\t}\n\t\tif (camp !== \"\") {\n\t\t\tcondition = record.camp === camp;\n\t\t}\n\t\tif (school !== \"\" && school !== \"all\") {\n\t\t\tcondition = record.school === school;\n\t\t}\n\t\treturn condition;\n\t});\n\tconst filterSchools = removeDuplicates(getAllSchools, \"school\");\n\treturn groupSchoolsByMonth(filterSchools);\n};\n\n// Get school details\nexport const getSchoolDetails = (\n\tdata: [],\n\tcountry: string | null,\n\tcamp: string | null,\n\tschool: string | null\n): any => {\n\tconsole.log(school);\n\tconst getAllSchools = data.filter((record: any) => {\n\t\treturn record.school === school;\n\t});\n\treturn getAllSchools;\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nconst useLocalStorage = () => {\n\t// Store storage object\n\tconst [storage, updateStorage] = useState<any>(() => {\n\t\tlet currentStorage = localStorage.getItem(\"chart-data\");\n\t\treturn currentStorage !== null\n\t\t\t? JSON.parse(currentStorage as any)\n\t\t\t: storage;\n\t});\n\n\t// Fetch current storage when the component is mounted\n\tuseEffect(() => {\n\t\tif (typeof window === undefined) return;\n\t\tsetTimeout(() => {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t\"chart-data\",\n\t\t\t\tJSON.stringify(storage ? storage : {})\n\t\t\t);\n\t\t}, 500);\n\t}, [storage]);\n\treturn [storage, updateStorage];\n};\n\nexport default useLocalStorage;\n","import React, {\n\tuseContext,\n\tuseEffect,\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n} from \"react\";\nimport {\n\tChart as ChartJS,\n\tCategoryScale,\n\tLinearScale,\n\tPointElement,\n\tLineElement,\n\tTitle,\n\tTooltip,\n\tLegend,\n} from \"chart.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { useFetch, useLocalStorage } from \"../../hooks\";\nimport { AppContext } from \"./../../store\";\nimport { filterChartData } from \"./../../helpers\";\n\n// Register Chart Types\nChartJS.register(\n\tCategoryScale,\n\tLinearScale,\n\tPointElement,\n\tLineElement,\n\tTitle,\n\tTooltip,\n\tLegend\n);\n\n// Line chart component\nconst LineChart: React.FC | any = () => {\n\t// Get local storage data\n\tconst [storage] = useLocalStorage();\n\n\tconst navigate = useNavigate();\n\t// Get list of data, current country school and camp\n\tconst { data, error } = useFetch();\n\tconst {\n\t\tselectedCountry,\n\t\tupdateCountry,\n\t\tselectedCamp,\n\t\tupdateCamp,\n\t\tselectedSchool,\n\t\tupdateSchool,\n\t} = useContext(AppContext);\n\tconst [chartData, setChartData] = useState<any>({\n\t\tlabels: [\n\t\t\t\"Jan\",\n\t\t\t\"Feb\",\n\t\t\t\"March\",\n\t\t\t\"Apr\",\n\t\t\t\"May\",\n\t\t\t\"Jun\",\n\t\t\t\"Jul\",\n\t\t\t\"Aug\",\n\t\t\t\"Sep\",\n\t\t\t\"Oct\",\n\t\t\t\"Nov\",\n\t\t\t\"Dec\",\n\t\t],\n\t\tdatasets: [],\n\t});\n\t// Update filtered chart data based on county, camp or school change\n\tuseEffect(() => {\n\t\tconst getData = Object.keys(data).length\n\t\t\t? filterChartData(\n\t\t\t\t\tdata.allData,\n\t\t\t\t\tselectedCountry,\n\t\t\t\t\tselectedCamp,\n\t\t\t\t\tselectedSchool\n\t\t\t  )\n\t\t\t: [];\n\t\tsetChartData({ ...chartData, datasets: getData });\n\t}, [selectedCountry, selectedCamp, selectedSchool, data]);\n\n\t// Fetch localStorage data on first mount\n\tuseMemo(() => {\n\t\tif (Object.keys(storage).length) {\n\t\t\tObject(storage as object).hasOwnProperty(\"country\") &&\n\t\t\t\tstorage.country !== \"\" &&\n\t\t\t\tupdateCountry(storage.country as string);\n\t\t\tObject(storage as object).hasOwnProperty(\"camp\") &&\n\t\t\t\tstorage.camp !== \"\" &&\n\t\t\t\tupdateCamp(storage.camp as string, false);\n\t\t\tObject(storage).hasOwnProperty(\"school\") &&\n\t\t\t\tstorage.country !== \"\" &&\n\t\t\t\tupdateSchool(storage.school as string, false);\n\t\t}\n\t}, []);\n\n\t// Line chart\n\tconst renderChart = (\n\t\t<Line\n\t\t\tdata-testid=\"line-chart-container\"\n\t\t\tdata={chartData}\n\t\t\toptions={{\n\t\t\t\tonClick: (event, element: any) => {\n\t\t\t\t\tif (element.length) {\n\t\t\t\t\t\t// Get clicked school data\n\t\t\t\t\t\tlet index = element[0].datasetIndex;\n\t\t\t\t\t\tlet school = chartData.datasets[index];\n\n\t\t\t\t\t\t// Update selected school\n\t\t\t\t\t\tupdateSchool(school.label, false);\n\n\t\t\t\t\t\t// Navigate to details page\n\t\t\t\t\t\tnavigate(\"/details\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: \"Click to toggle schools\",\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: \"right\",\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tusePointStyle: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t);\n\n\treturn error || data.length < 1\n\t\t? `<span data-testid=\"error-container\"><Error ${\n\t\t\t\terror ? error : \"Invalid Data, Chart Data Is Empty\"\n\t\t  }/span>`\n\t\t: renderChart;\n};\nexport default LineChart;\n","import React, { useContext, useState } from \"react\";\nimport { InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport { useFetch, useLocalStorage } from \"./../../hooks\";\nimport { AppContext } from \"../../store\";\n\nconst SchoolsList: React.FC = () => {\n\t// Get local storage data\n\tconst [storage, updateStorage ] = useLocalStorage();\n\n\t// Get list of schools\n\tconst { data, error } = useFetch();\n\tconst { schools } = data;\n\n\t// Get current camp, school\n\tconst { selectedSchool, updateSchool } = useContext(AppContext);\n\tconst handleChange = (event: SelectChangeEvent) => {\n\t\tupdateStorage({ ...storage, school: event.target.value as string });\n\t\tupdateSchool(event.target.value, true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!schools || error ? (\n\t\t\t\t<div>Loading</div>\n\t\t\t) : (\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tSelect School\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tdata-testid=\"schools\"\n\t\t\t\t\t\tvalue={selectedSchool}\n\t\t\t\t\t\tlabel=\"School\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={\"all\"}>Show All</MenuItem>\n\t\t\t\t\t\t{schools.length ? (\n\t\t\t\t\t\t\tschools.map((item: any) => (\n\t\t\t\t\t\t\t\t<MenuItem key={item.id} value={item.school}>\n\t\t\t\t\t\t\t\t\t{item.school}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MenuItem></MenuItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default SchoolsList;\n","import React, { useContext, useEffect } from \"react\";\nimport { InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport { useFetch , useLocalStorage } from \"./../../hooks\";\nimport { AppContext } from \"../../store\";\n\nconst CampsList: React.FC = () => {\n\t// Get local storage data\n\tconst [storage, updateStorage ] = useLocalStorage();\n\n\t// Get list of camps\n\tconst { data, error } = useFetch();\n\tconst { camps } = data;\n\n\t// Fetch camps based on current selected country\n\tconst { selectedCamp, updateCamp } = useContext(AppContext);\n\t// Set selected camp\n\tconst handleChange = (event: SelectChangeEvent) => {\n\t\tupdateStorage({ ...storage, camp: event.target.value as string });\n\t\tupdateCamp(event.target.value, true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!camps || error ? (\n\t\t\t\t<div>Loading</div>\n\t\t\t) : (\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tSelect Camp\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tdata-testid=\"camps\"\n\t\t\t\t\t\tvalue={selectedCamp}\n\t\t\t\t\t\tlabel=\"Camp\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem>Select Camp</MenuItem>\n\t\t\t\t\t\t{camps.length ? (\n\t\t\t\t\t\t\tcamps.map((item: any) => (\n\t\t\t\t\t\t\t\t<MenuItem key={item.id} value={item.camp}>\n\t\t\t\t\t\t\t\t\t{item.camp}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MenuItem></MenuItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CampsList;\n","import React, { useContext } from \"react\";\nimport { InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport { useFetch, useLocalStorage } from \"./../../hooks\";\nimport { AppContext } from \"../../store\";\n\nconst CountriesList: React.FC = () => {\n\t// Get local storage data\n\tconst [storage, updateStorage] = useLocalStorage();\n\n\t// Fetch Countries List\n\tconst { data, error } = useFetch();\n\tconst { countries } = data;\n\n\t// Set selected country\n\tconst { selectedCountry, updateCountry } = useContext(AppContext);\n\n\t// Update current country when select changes\n\tconst handleChange = (event: SelectChangeEvent) => {\n\t\tupdateStorage({ ...storage, country: event.target.value as string });\n\t\tupdateCountry(event.target.value as string);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!countries || error ? (\n\t\t\t\t<div>Loading</div>\n\t\t\t) : (\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tSelect Country\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tdata-testid=\"countries\"\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedCountry}\n\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t{countries.length ? (\n\t\t\t\t\t\t\tcountries.map((item: any) => (\n\t\t\t\t\t\t\t\t<MenuItem key={item.id} value={item.country}>\n\t\t\t\t\t\t\t\t\t{item.country}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MenuItem></MenuItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CountriesList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid } from \"@mui/material\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tLink,\n\tPaper,\n} from \"@mui/material\";\nimport { useFetch } from \"../../hooks\";\nimport { getSchoolDetails } from \"../../helpers\";\nimport { AppContext } from \"./../../store\";\n\nconst SchoolDetails: React.FC = () => {\n\tconst { data, error } = useFetch();\n\tconst navigate = useNavigate();\n\n\tconst { selectedCountry, selectedCamp, selectedSchool } = useContext(\n\t\tAppContext\n\t);\n\tconst [currentSchoolDetails, setCurrentSchoolDetails] = useState<[]>([]);\n\n\tuseEffect(() => {\n\t\tconst getData = Object.keys(data).length\n\t\t\t? getSchoolDetails(\n\t\t\t\t\tdata.allData,\n\t\t\t\t\tselectedCountry,\n\t\t\t\t\tselectedCamp,\n\t\t\t\t\tselectedSchool\n\t\t\t  )\n\t\t\t: [];\n\t\tsetCurrentSchoolDetails(getData);\n\t}, [data]);\n\n\t// Get current school details based con selectedCountry and selectedCamp\n\treturn (\n\t\t<Grid className=\"section-container\" container spacing={2}>\n\t\t\t<Grid item xs={8}>\n\t\t\t\t<Link\n\t\t\t\t\tcomponent=\"button\"\n\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tnavigate(\"/\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tGo back\n\t\t\t\t</Link>\n\t\t\t\t{currentSchoolDetails.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h4 className=\"section-heading\">\n\t\t\t\t\t\t\t<b>{selectedSchool}</b> Details\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tsx={{ minWidth: 650 }}\n\t\t\t\t\t\t\t\taria-label=\"simple table\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\t\t\t\"Country\",\n\t\t\t\t\t\t\t\t\t\t\t\"Camp\",\n\t\t\t\t\t\t\t\t\t\t\t\"# Of Lessons\",\n\t\t\t\t\t\t\t\t\t\t\t\"Month\",\n\t\t\t\t\t\t\t\t\t\t].map((item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(\" \", \"\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"left\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{currentSchoolDetails.map((school: any) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\t\t\tkey={school.id}\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:last-child td, &:last-child th\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.country}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.camp}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.lessons}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.month}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Please select a school</p>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\nexport default SchoolDetails;\n","import * as React from \"react\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\n\nconst Loading: React.FC = () => {\n\treturn (\n\t\t<Box\n\t\t\tclassName=\"loading-screen\"\n\t\t\tsx={{\n\t\t\t\twidth: \"200px\",\n\t\t\t\tmargin: \"50vh auto auto auto\",\n\t\t\t}}\n\t\t>\n\t\t\t<LinearProgress />\n\t\t</Box>\n\t);\n};\nexport default Loading;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Grid, CssBaseline } from \"@mui/material\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n\tHeader,\n\tNavigation,\n\tChart,\n\tLoading,\n\tSchoolDetails,\n} from \"./../../components\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { AppContext } from \"../../store\";\nimport \"./../../assets/css/App.css\";\n\n/* Home Page Container */\nconst Home: React.FC = () => {\n\t// Get current theme mode: string\n\tconst { themeMode, loading, updateLoading } = useContext(AppContext);\n\tconst [currentTheme, setCurrentTheme] = useState<any>(\n\t\tcreateTheme({\n\t\t\tpalette: {\n\t\t\t\tmode: themeMode as any,\n\t\t\t},\n\t\t})\n\t);\n\n\t// Update theme when themeMode value changes\n\tuseEffect(() => {\n\t\treturn setCurrentTheme(\n\t\t\tcreateTheme({\n\t\t\t\tpalette: {\n\t\t\t\t\tmode: themeMode as any,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}, [themeMode]);\n\n\t// Remove loading screen on mount\n\tuseEffect(() => {\n\t\t// timeout is used for testing purposes, could be removed on production\n\t\tsetTimeout(() => {\n\t\t\tupdateLoading(false);\n\t\t}, 1000);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={currentTheme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Loading />\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Chart />} />\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath=\"/details\"\n\t\t\t\t\t\t\t\t\t\telement={<SchoolDetails />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Routes>\n\t\t\t\t\t\t\t</Router>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Home } from \"./pages\";\nimport { AppProvider } from \"./store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"app\") as HTMLElement);\nroot.render(\n\t<React.StrictMode>\n\t\t<AppProvider>\n\t\t\t<Home />\n\t\t</AppProvider>\n\t</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}